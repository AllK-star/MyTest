# -*- coding: utf-8 -*-
"""SearchInList.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t29Luw-_FEjjKGDZJ1jcBN6hiMflk336
"""

#Задача: имеется массив целых чисел. Мы вводим некоторе число.
#Необходимо составить алгоритм, который будет выводить "true", если введеное число есть в массиве
#и "false" если его нет в массиве

import random

#creating a list of numbers
print("Будет создан массив размера от 1 до 1000 состоящий из рандомных целых чисел. \n Если вы хотите задать свои параметры массиваб то наюмите любую клавишу и затем enter, \n если не хотите - то просто enter")
x = input()
if (x == ''):  # если пользователь ничего не ввел, то создаем список на дефолтных условиях
  N = random.randint(1,1000)
  thenumbers = [0]*N
  for i in range(0, N):
    thenumbers[i] = random.randint(1, 100)
  print("Размер массива:", N)
else:  #если ввел, то запрашиваем данные и создаем список

  while True: # проверка ввода количества элементов
    N = input("сколько элементов? ")
    if (N.isdigit() == True):
      N = int(N)
      break
    else:
      print("Нужно целое число. Положительное.")

  while True: # проверка ввода минимального числа
    min  = input("минимальнлое значение чисел? ")
    if (min.lstrip("-").isdigit() == True):
      min = int(min)
      break
    else:
      print("Нужно целое число.")

  while True: # проверка ввода максимального числа и того, что оно больше минимального
    max = input("максимальное значение чисел?")
    if (max.lstrip("-").isdigit() == True) and (min <= int(max)):
      max = int(max)
      break
    else:
      print("Нужно целое число больше минимального")

  thenumbers = [0]*N
  for i in range(0, N):
    thenumbers[i] = random.randint(min, max)
print(thenumbers) #вывод списка

#enter the number we are going to find
while True: # проверка ввода минимального числа
    x  = input("Число которе хотим найти? ")
    if (x.lstrip("-").isdigit() == True):
      x = int(x)
      break
    else:
      print("Нужно целое число.")

#method 1
if x in thenumbers:
  print("true")
else: print("false")

#method 2. Посимвольная проверка списка
for i in thenumbers:
  if x == i:
    print("true")
    break
  if (thenumbers.index(i) == len(thenumbers)-1): #если цикл дошел до последнего символа и совпадений нет, тот такого числа нет
    print("false")

# Метод 3. Сортировка массива и двоичный поиск
#соритровка
thenumbers = sorted(thenumbers)
#сам поиск
print(thenumbers)
top = len(thenumbers) - 1
bottom = 0
while True:
  if top > bottom:
    if (x == thenumbers[top+bottom//2]):
      print("True")
      break
    elif (x < thenumbers[top+bottom//2]):
      top = (top+bottom//2) - 1
      continue
    else:
      bottom = (top+bottom//2) + 1
    continue
  else:
    print("false")
    break